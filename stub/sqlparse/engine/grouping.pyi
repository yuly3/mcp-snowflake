"""
This type stub file was generated by pyright.
"""

from sqlparse import sql
from sqlparse.utils import recurse

T_NUMERICAL = ...
T_STRING = ...
T_NAME = ...
def group_brackets(tlist): # -> None:
    ...

def group_parenthesis(tlist): # -> None:
    ...

def group_case(tlist): # -> None:
    ...

def group_if(tlist): # -> None:
    ...

def group_for(tlist): # -> None:
    ...

def group_begin(tlist): # -> None:
    ...

def group_typecasts(tlist): # -> None:
    ...

def group_tzcasts(tlist): # -> None:
    ...

def group_typed_literal(tlist): # -> None:
    ...

def group_period(tlist): # -> None:
    ...

def group_as(tlist): # -> None:
    ...

def group_assignment(tlist): # -> None:
    ...

def group_comparison(tlist): # -> None:
    ...

@recurse(sql.Identifier)
def group_identifier(tlist): # -> None:
    ...

@recurse(sql.Over)
def group_over(tlist): # -> None:
    ...

def group_arrays(tlist): # -> None:
    ...

def group_operator(tlist): # -> None:
    ...

def group_identifier_list(tlist): # -> None:
    ...

@recurse(sql.Comment)
def group_comments(tlist): # -> None:
    ...

@recurse(sql.Where)
def group_where(tlist): # -> None:
    ...

@recurse()
def group_aliased(tlist): # -> None:
    ...

@recurse(sql.Function)
def group_functions(tlist): # -> None:
    ...

@recurse(sql.Identifier)
def group_order(tlist): # -> None:
    """Group together Identifier and Asc/Desc token"""
    ...

@recurse()
def align_comments(tlist): # -> None:
    ...

def group_values(tlist): # -> None:
    ...

def group(stmt):
    ...

